字符串置换
给定两个字符串，请设计一个方法来判定其中一个字符串是否为另一个字符串的置换。
置换的意思是，通过改变顺序可以使得两个字符串相等。
样例
"abc" 为 "cba" 的置换。
"aabc" 不是 "abcc" 的置换。

思路
总体来说，对这个题目我想到了两个解决方法：
(1)排序
如果不限制时间复杂度的话，可以直接调用（或自己实现）字符串排序函数，比较两个字符串排序之后的结果是否一致，如果一致，则判断为真，否则为假。
这种方式的时间复杂度最快也是nlogn。
(2)哈希
具体的做法是，遍历两个字符串，统计两个字符串中相同字符出现的次数（这个过程实际上就是将相同字符映射到同一个计数器上，是一种哈希操作），
然后比较相同字符出现的次数是否一致，若一致，则判断为真，否则为假。用哈希的方法可以让时间复杂度达到n，因为整个操作过程实际上就是遍历字符串的过程。

代码实现
(1)排序
class Solution {
public:
    /**
     * @param A a string
     * @param B a string
     * @return a boolean
     */
    bool stringPermutation(string& A, string& B) {
        if(A.size()!=B.size()) return false;
        
        int sizeA=A.size();
        int sizeB=B.size();
        
        sort(A.begin(),A.end());
        sort(B.begin(),B.end());
        
        if(A==B) return true;
            return false;       
        
    }
};

(2)哈希
class Solution {
public:
    /**
     * @param A a string
     * @param B a string
     * @return a boolean
     */
    bool stringPermutation(string& A, string& B) {
        if(A.size()!=B.size()) return false;
        
        int sizeA=A.size();
        int sizeB=B.size();
        
        int temp[100];
        for(int k=0;k<100;k++)
        { 
            temp[k]=0; 
        }
        
        for(int i=0;i<sizeA;i++)
        {
            temp[A[i]-' ']++;    //每个字符与空格的ASCII码相减，得到该字符的ASCII码      
            temp[B[i]-' ']--;    //ASCII码相同的字符映射到同一个计数器上
        }
        
        for(int k=0;k<100;k++)
        {
            if(temp[k]!=0) return false;               
        }
         return true;        
    }
};
