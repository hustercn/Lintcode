判断一个正整数是不是回文数。
回文数的定义是，将这个数反转之后，得到的数仍然是同一个数。
样例
11, 121, 1, 12321 这些是回文数。
23, 32, 1232 这些不是回文数。

解:1：数字翻转
将整数翻转，之后比较，若跟原来的数相等，就是回文数字 ,//若1234321，倒转之后数字为1234321，相等，就是回文数字.

bool isPalindrome(int x) 
{
	if(x<0)
	{
		return false;
	}
	
	int tmp=x,res=0;
	while(tmp)
	{
		res=res*10+tmp%10;
		tmp=tmp/10;
	}
	return x==res;
}



解法2：转换成字符串
这种方法不仅可以判断一个数是否为回文数，还可以判断文本字符串是否是回文的。
 bool palindromeNumber(int num) {
        if(num<0)   return false;
        
        else return isPalindrome(itoa(num));    //itoa()函数将数字转变成字符串
    }
    
 bool isPalindrome(string &str)
 {
    int begin = 0, end = str.length()-1;
    while (begin < end) 
    {
        if (str[begin] == str[end]) 
        {
             begin++;
             end--;
         } else{
             return false;
             }
     }
       return true;
  }
