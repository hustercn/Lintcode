给出两个字符串，找到最长公共子串，并返回其长度。
注意事项:子串的字符应该连续的出现在原字符串中，这与子序列有所不同。
样例给出A=“ABCD”，B=“CBCE”，返回 2

注意：必须要保证连续的子串
代码：
/*c[i][j]可递归地表述如下：
(1)如果i=0或j=0．               c[i][j]=0,
(2)如果i,j>0,且a[i-1]==b[j-1].  c[i][j]=c[i-1][j-1]+1,
(3)如果i,j>0,且a[i-1]!=b[j-1].  c[i][j]=max(c[i][j-1],c[i-1][j]),
*/

class Solution {
public:    
    /**
     * @param A, B: Two string.
     * @return: the length of the longest common substring.
     */
    int longestCommonSubstring(string &A, string &B) {
       int m=A.size();
       int n=B.size();
       int i,j;
       int c[m][n];
       
       for(int i=0;i<=m;i++)
            c[i][0]=0;
       for(int j=0;j<=n;j++)
            c[0][j]=0;
        
       
       for (int i=1;i<=m;i++)    
       {
           for (int j=1;j<=n;j++) 
           {
                if (A[i-1]==B[j-1]) 
                    c[i][j]=c[i-1][j-1]+1; 

                else if (c[i-1][j]>=c[i][j-1]) 
                    c[i][j]=c[i-1][j];

                else
                    c[i][j]=c[i][j-1];
            }
        }
       return c[m][n];
       
    }
};
