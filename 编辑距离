给出两个单词word1和word2，计算出将word1 转换为word2的最少操作次数。

你总共三种操作方法：
插入一个字符
删除一个字符
替换一个字符

样例给出 work1="mart" 和 work2="karma"
返回 3

int calStringDistance(string a,string b)
{    
      int n = (int)a.size();
      int m = (int)b.size();    
      vector<vector<int>> dp(n+1,vector<int>(m+1,0));    //二维数组初始化
      dp[0][0] = 0;                                      //dp[x][y]代表将a字符串前x个字符修改成b字符串前y个字符    
      for (int i=1; i<=m; ++i) 
         dp[0][i] = i;    
      for (int j=1; j<=n; ++i) 
         dp[j][0] = j;    
     for (int i=1; i<=m; ++i)
     {        
        for (int j=1; j<=n; ++j) 
        {            
            int one = dp[i-1][j] +1,two = dp[i][j-1]+1,three = dp[i-1][j-1];            
            if(a[i-1]!=b[j-1]) three+=1;            
            dp[i][j] = min(min(one,two),three);        
        }    
    }    
    return dp[n][m];
}



